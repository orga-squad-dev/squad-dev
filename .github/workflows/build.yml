name: Build

on:
  push:
    branches:
      - main
      - develop
      - 'features/**'
  workflow_dispatch:
    inputs:
      existVersion:
        description: 'Existing version to deploy'

jobs:

  checkout:
    name: Get sources
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/upload-artifact@v2
        with:
          name: sources
          path: ./
    
  build:
    name: Create build
    needs: checkout
    runs-on: ubuntu-latest
    steps:

      - uses: actions/download-artifact@v2
        with:
          name: sources
          path: ./
      
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - run: npm install
      - run: npm test
        
  QG:
    name: SonarCloud
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # Shallow clones should be disabled for a better relevancy of analysis
          fetch-depth: 0
      - name: List files
        run: ls -lah
      - name: Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: ./src/
          args: >
            -Dsonar.organization=orga-squad-dev
            -Dsonar.projectKey=orga-squad-dev_squad-dev 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # SonarCloud access token should be generated from https://sonarcloud.io/account/security/
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  version:
    name: Bump version
    needs: QG
    runs-on: ubuntu-latest
    steps:

      - uses: actions/download-artifact@v2
        with:
          name: sources
          path: ./
      
      - name: Extract version
        id: extract_version
        uses: Saionaro/extract-package-version@v1.0.6
      # From now you can access the version
      - name: Print version
        run: echo ${{ steps.extract_version.outputs.version }}

      - name: Extract branch name
        shell: bash
        run: |
          echo "branch_name=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
        id: extract_branch

      - name: Test branch_name
        run: echo ${{ env.branch_name }}

      - name: Feature name
        run: |
          if [[ ${{ env.branch_name }} =~ "feature/" ]]; then
            echo "::set-output name=feature::bug"
          fi
          if [[ ${{ env.branch_name }} == "main" ]]; then
            echo "::set-output name=feature::feature"
          fi
        id: feature_name

      - name: Bump release version
        id: bump_version
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{ steps.extract_version.outputs.version }}
          version-fragment: ${{ steps.feature_name.outputs.feature }}
      - name: Do something with your bumped release version
        run: echo ${{ steps.bump_version.outputs.next-version }} on ${{ steps.extract_branch.outputs.branch }}

      - name: Image name
        run: |
          echo *** Branch name *** : ${{ env.branch_name }} / ${{steps.extract_version.outputs.version}}
          if [[ ${{ env.branch_name }} =~ "feature/" || ${{ env.branch_name }} =~ "develop" ]]; then
            echo "::set-output name=tag::${steps.extract_version.outputs.version}-${steps.extract_branch.outputs.branch}"
          fi
          if [[ ${{ env.branch_name }} == "main" ]]; then
            echo "::set-output name=tag::${{steps.extract_version.outputs.version}}"
          fi
        id: image_name

      #- name: Image name
      #  run: echo ${{ steps.feature_name.outputs.feature }} - ${{ steps.tag_name.outputs.tag }}

  build-image:
    name: Build docker image
    needs: version
    runs-on: ubuntu-latest
    steps:

      - uses: actions/download-artifact@v2
        with:
          name: sources
          path: ./

    